defmodule Advent20.JigsawTest do
  use ExUnit.Case, async: true

  alias Advent20.Jigsaw

  @input "20_jigsaw.txt" |> Path.expand("input_files") |> File.read!()

  @unit_test_input """
  Tile 2311:
  ..##.#..#.
  ##..#.....
  #...##..#.
  ####.#...#
  ##.##.###.
  ##...#.###
  .#.#.#..##
  ..#....#..
  ###...#.#.
  ..###..###

  Tile 1951:
  #.##...##.
  #.####...#
  .....#..##
  #...######
  .##.#....#
  .###.#####
  ###.##.##.
  .###....#.
  ..#.#..#.#
  #...##.#..

  Tile 1171:
  ####...##.
  #..##.#..#
  ##.#..#.#.
  .###.####.
  ..###.####
  .##....##.
  .#...####.
  #.##.####.
  ####..#...
  .....##...

  Tile 1427:
  ###.##.#..
  .#..#.##..
  .#.##.#..#
  #.#.#.##.#
  ....#...##
  ...##..##.
  ...#.#####
  .#.####.#.
  ..#..###.#
  ..##.#..#.

  Tile 1489:
  ##.#.#....
  ..##...#..
  .##..##...
  ..#...#...
  #####...#.
  #..#.#.#.#
  ...#.#.#..
  ##.#...##.
  ..##.##.##
  ###.##.#..

  Tile 2473:
  #....####.
  #..#.##...
  #.##..#...
  ######.#.#
  .#...#.#.#
  .#########
  .###.#..#.
  ########.#
  ##...##.#.
  ..###.#.#.

  Tile 2971:
  ..#.#....#
  #...###...
  #.#.###...
  ##.##..#..
  .#####..##
  .#..####.#
  #..#.#..#.
  ..####.###
  ..#.#.###.
  ...#.#.#.#

  Tile 2729:
  ...#.#.#.#
  ####.#....
  ..#.#.....
  ....#..#.#
  .##..##.#.
  .#.####...
  ####.#.#..
  ##.####...
  ##..#.##..
  #.##...##.

  Tile 3079:
  #.#.#####.
  .#..######
  ..#.......
  ######....
  ####.#..#.
  .#...#.##.
  #.#####.##
  ..#.###...
  ..#.......
  ..#.###...
  """

  describe "1" do
    test "unit tests" do
      assert Jigsaw.part_1(@unit_test_input) == 20_899_048_083_289
    end

    test "puzzle answer: multiple of ids of four corner tiles" do
      assert Jigsaw.part_1(@input) == 104_831_106_565_027
    end
  end

  describe "2" do
    #    # Flip an image horizontally
    #    defp flip_horiz(string) do
    #      string
    #      |> String.split("\n")
    #      |> Enum.map(&String.codepoints/1)
    #      |> Enum.map(&Enum.reverse/1)
    #      |> Enum.map(&Enum.join/1)
    #      |> Enum.join("\n")
    #    end
    #
    #    test "rendering actual image from unit test" do
    #      image =
    #        """
    #        .#.#..#.##...#.##..#####
    #        ###....#.#....#..#......
    #        ##.##.###.#.#..######...
    #        ###.#####...#.#####.#..#
    #        ##.#....#.##.####...#.##
    #        ...########.#....#####.#
    #        ....#..#...##..#.#.###..
    #        .####...#..#.....#......
    #        #..#.##..#..###.#.##....
    #        #.####..#.####.#.#.###..
    #        ###.#.#...#.######.#..##
    #        #.####....##..########.#
    #        ##..##.#...#...#.#.#.#..
    #        ...#..#..#.#.##..###.###
    #        .#.#....#.##.#...###.##.
    #        ###.#...#..#.##.######..
    #        .#.#.###.##.##.#..#.##..
    #        .####.###.#...###.#..#.#
    #        ..#.#..#..#.#.#.####.###
    #        #..####...#.#.#.###.###.
    #        #####..#####...###....##
    #        #.##..#..#...#..####...#
    #        .#.###..##..##..####.##.
    #        ...###...##...#...#..###
    #        """
    #        |> String.trim()
    #        |> flip_horiz()
    #
    #      assert Jigsaw.part_2(@unit_test_input) == image
    #    end

    test "unit test" do
      assert Jigsaw.part_2(@unit_test_input) == 273
    end

    test "puzzle answer" do
      assert Jigsaw.part_2(@input) == 2093
    end
  end
end
